{
    "sourceFile": "lib/presentation/screens/product_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1733254704366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733254749966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n import 'package:cubit_example/constants/back_arrow.dart';\r\n+import 'package:cubit_example/constants/like_button.dart';\r\n import 'package:cubit_example/constants/theme/app_colors.dart';\r\n+import 'package:cubit_example/constants/theme/app_pictures.dart';\r\n import 'package:cubit_example/data/product_color.dart';\r\n import 'package:cubit_example/data/product_info.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n"
                },
                {
                    "date": 1733254882063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n import 'package:cubit_example/constants/back_arrow.dart';\r\n import 'package:cubit_example/constants/like_button.dart';\r\n import 'package:cubit_example/constants/theme/app_colors.dart';\r\n import 'package:cubit_example/constants/theme/app_pictures.dart';\r\n+import 'package:cubit_example/constants/theme/app_typography.dart';\r\n+import 'package:cubit_example/data/mock_data.dart';\r\n import 'package:cubit_example/data/product_color.dart';\r\n import 'package:cubit_example/data/product_info.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n"
                },
                {
                    "date": 1733254974611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import 'package:cubit_example/constants/back_arrow.dart';\r\n+import 'package:cubit_example/constants/chosing_button.dart';\r\n import 'package:cubit_example/constants/like_button.dart';\r\n import 'package:cubit_example/constants/theme/app_colors.dart';\r\n import 'package:cubit_example/constants/theme/app_pictures.dart';\r\n import 'package:cubit_example/constants/theme/app_typography.dart';\r\n"
                },
                {
                    "date": 1733255013571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n import 'package:cubit_example/constants/back_arrow.dart';\r\n+import 'package:cubit_example/constants/button.dart';\r\n import 'package:cubit_example/constants/chosing_button.dart';\r\n+import 'package:cubit_example/constants/chosing_color.dart';\r\n import 'package:cubit_example/constants/like_button.dart';\r\n import 'package:cubit_example/constants/theme/app_colors.dart';\r\n import 'package:cubit_example/constants/theme/app_pictures.dart';\r\n import 'package:cubit_example/constants/theme/app_typography.dart';\r\n"
                },
                {
                    "date": 1733261620764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,12 +5,14 @@\n import 'package:cubit_example/constants/like_button.dart';\r\n import 'package:cubit_example/constants/theme/app_colors.dart';\r\n import 'package:cubit_example/constants/theme/app_pictures.dart';\r\n import 'package:cubit_example/constants/theme/app_typography.dart';\r\n+import 'package:cubit_example/cubit/favorite_cubit.dart';\r\n import 'package:cubit_example/data/mock_data.dart';\r\n import 'package:cubit_example/data/product_color.dart';\r\n import 'package:cubit_example/data/product_info.dart';\r\n import 'package:flutter/material.dart';\r\n+import 'package:flutter_bloc/flutter_bloc.dart';\r\n \r\n class ProductPage extends StatefulWidget {\r\n   const ProductPage({\r\n     super.key,\r\n@@ -29,189 +31,196 @@\n   bool onPressed = false;\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n-      backgroundColor: AppColors.veryLightGrey,\r\n-      body: SingleChildScrollView(\r\n-        child: Column(\r\n-          crossAxisAlignment: CrossAxisAlignment.start,\r\n-          children: [\r\n-            Stack(\r\n+    return BlocBuilder<FavoriteCubit, FavoriteState>(\r\n+      builder: (context, state) {\r\n+        return Scaffold(\r\n+          backgroundColor: AppColors.veryLightGrey,\r\n+          body: SingleChildScrollView(\r\n+            child: Column(\r\n+              crossAxisAlignment: CrossAxisAlignment.start,\r\n               children: [\r\n-                SizedBox(\r\n-                  height: 435,\r\n-                  child: Image.asset(widget.productInfo.imagePath),\r\n+                Stack(\r\n+                  children: [\r\n+                    SizedBox(\r\n+                      height: 435,\r\n+                      child: Image.asset(widget.productInfo.imagePath),\r\n+                    ),\r\n+                    const Padding(\r\n+                      padding: EdgeInsets.only(left: 34, top: 42),\r\n+                      child: BackArrow(\r\n+                        radius: 21,\r\n+                        icon: Icon(\r\n+                          color: AppColors.baseRed,\r\n+                          Icons.arrow_back,\r\n+                          size: 34,\r\n+                        ),\r\n+                      ),\r\n+                    ),\r\n+                    Padding(\r\n+                      padding: const EdgeInsets.only(top: 22),\r\n+                      child: LikeButton(\r\n+                        likeImage: onPressed\r\n+                            ? const AssetImage(AppPictures.iconSelectedHeart)\r\n+                            : const AssetImage(AppPictures.iconHeart),\r\n+                        color: AppColors.roundedHeart,\r\n+                        onTap: () {\r\n+                          setState(\r\n+                            () {\r\n+                              onPressed = !onPressed;\r\n+                              if (isFavoriteItems\r\n+                                  .any((i) => i.id == widget.productInfo.id)) {\r\n+                                // isFavoriteItems.remove(widget.productInfo);\r\n+                                context.\r\n+                              } else {\r\n+                                widget.productInfo.selectedColor =\r\n+                                    selectedColor;\r\n+                                isFavoriteItems.add(widget.productInfo);\r\n+                              }\r\n+                            },\r\n+                          );\r\n+                        },\r\n+                      ),\r\n+                    )\r\n+                  ],\r\n                 ),\r\n+                Padding(\r\n+                  padding: const EdgeInsets.only(\r\n+                    top: 57,\r\n+                    left: 27,\r\n+                    right: 30,\r\n+                  ),\r\n+                  child: Row(\r\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                    children: [\r\n+                      Text(\r\n+                        widget.productInfo.name,\r\n+                        style: AppTypography.productTitle,\r\n+                      ),\r\n+                      Text(\r\n+                        '${widget.productInfo.price}\\$',\r\n+                        style: AppTypography.productTitlePrice,\r\n+                      )\r\n+                    ],\r\n+                  ),\r\n+                ),\r\n                 const Padding(\r\n-                  padding: EdgeInsets.only(left: 34, top: 42),\r\n-                  child: BackArrow(\r\n-                    radius: 21,\r\n-                    icon: Icon(\r\n-                      color: AppColors.baseRed,\r\n-                      Icons.arrow_back,\r\n-                      size: 34,\r\n-                    ),\r\n+                  padding: EdgeInsets.only(left: 29),\r\n+                  child: Text(\r\n+                    'Leila dress',\r\n+                    style: AppTypography.aboutUsText,\r\n                   ),\r\n                 ),\r\n+                const SizedBox(height: 21),\r\n+                const Padding(\r\n+                  padding: EdgeInsets.only(left: 29),\r\n+                  child: Text(\r\n+                    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Tempus, sed sociis at pellentesque adipiscing tristique eu lectus venenatis.',\r\n+                    style: AppTypography.productInfo,\r\n+                  ),\r\n+                ),\r\n+                const SizedBox(height: 39),\r\n+                const Padding(\r\n+                  padding: EdgeInsets.only(left: 21),\r\n+                  child: Text(\r\n+                    'Choose size',\r\n+                    style: AppTypography.productSize,\r\n+                  ),\r\n+                ),\r\n                 Padding(\r\n-                  padding: const EdgeInsets.only(top: 22),\r\n-                  child: LikeButton(\r\n-                    likeImage: onPressed\r\n-                        ? const AssetImage(AppPictures.iconSelectedHeart)\r\n-                        : const AssetImage(AppPictures.iconHeart),\r\n-                    color: AppColors.roundedHeart,\r\n-                    onTap: () {\r\n-                      setState(\r\n-                        () {\r\n-                          onPressed = !onPressed;\r\n-                          if (isFavoriteItems\r\n-                              .any((i) => i.id == widget.productInfo.id)) {\r\n-                            isFavoriteItems.remove(widget.productInfo);\r\n-                          } else {\r\n-                            widget.productInfo.selectedColor = selectedColor;\r\n-                            isFavoriteItems.add(widget.productInfo);\r\n-                          }\r\n-                        },\r\n-                      );\r\n-                    },\r\n+                  padding: const EdgeInsets.only(left: 30, top: 30),\r\n+                  child: Row(\r\n+                    children: [\r\n+                      for (var i = 0; i < selectedSize.length; i++)\r\n+                        ChosingButton(\r\n+                          text: Text(\r\n+                            selectedSize[i],\r\n+                            style: isSelected == selectedSize[i]\r\n+                                ? AppTypography.productCircleSelected\r\n+                                : AppTypography.productCircle,\r\n+                          ),\r\n+                          onTap: () {\r\n+                            setState(\r\n+                              () {\r\n+                                isSelected = selectedSize[i];\r\n+                              },\r\n+                            );\r\n+                          },\r\n+                          color: isSelected == selectedSize[i]\r\n+                              ? AppColors.baseRed\r\n+                              : Colors.white,\r\n+                        )\r\n+                    ],\r\n                   ),\r\n-                )\r\n-              ],\r\n-            ),\r\n-            Padding(\r\n-              padding: const EdgeInsets.only(\r\n-                top: 57,\r\n-                left: 27,\r\n-                right: 30,\r\n-              ),\r\n-              child: Row(\r\n-                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                children: [\r\n-                  Text(\r\n-                    widget.productInfo.name,\r\n-                    style: AppTypography.productTitle,\r\n+                ),\r\n+                const SizedBox(height: 39),\r\n+                const Padding(\r\n+                  padding: EdgeInsets.only(left: 21),\r\n+                  child: Text(\r\n+                    'Choose color',\r\n+                    style: AppTypography.productSize,\r\n                   ),\r\n-                  Text(\r\n-                    '${widget.productInfo.price}\\$',\r\n-                    style: AppTypography.productTitlePrice,\r\n-                  )\r\n-                ],\r\n-              ),\r\n-            ),\r\n-            const Padding(\r\n-              padding: EdgeInsets.only(left: 29),\r\n-              child: Text(\r\n-                'Leila dress',\r\n-                style: AppTypography.aboutUsText,\r\n-              ),\r\n-            ),\r\n-            const SizedBox(height: 21),\r\n-            const Padding(\r\n-              padding: EdgeInsets.only(left: 29),\r\n-              child: Text(\r\n-                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Tempus, sed sociis at pellentesque adipiscing tristique eu lectus venenatis.',\r\n-                style: AppTypography.productInfo,\r\n-              ),\r\n-            ),\r\n-            const SizedBox(height: 39),\r\n-            const Padding(\r\n-              padding: EdgeInsets.only(left: 21),\r\n-              child: Text(\r\n-                'Choose size',\r\n-                style: AppTypography.productSize,\r\n-              ),\r\n-            ),\r\n-            Padding(\r\n-              padding: const EdgeInsets.only(left: 30, top: 30),\r\n-              child: Row(\r\n-                children: [\r\n-                  for (var i = 0; i < selectedSize.length; i++)\r\n-                    ChosingButton(\r\n-                      text: Text(\r\n-                        selectedSize[i],\r\n-                        style: isSelected == selectedSize[i]\r\n-                            ? AppTypography.productCircleSelected\r\n-                            : AppTypography.productCircle,\r\n+                ),\r\n+                const SizedBox(height: 28),\r\n+                Padding(\r\n+                  padding: const EdgeInsets.only(left: 29, right: 100),\r\n+                  child: Row(\r\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                    children: [\r\n+                      for (var i = 0; i < productColors.length; i++)\r\n+                        ChosingColor(\r\n+                            color: productColors[i].color,\r\n+                            widget: selectedColor == productColors[i]\r\n+                                ? const Icon(Icons.check)\r\n+                                : const Icon(\r\n+                                    Icons.close_rounded,\r\n+                                    color: Colors.white,\r\n+                                  ),\r\n+                            onTap: () {\r\n+                              setState(\r\n+                                () {\r\n+                                  selectedColor = productColors[i];\r\n+                                  widget.productInfo.selectedColor =\r\n+                                      selectedColor;\r\n+                                },\r\n+                              );\r\n+                            })\r\n+                      // ChosingColor(\r\n+                      //   color: AppColors.baseRed,\r\n+                      // ),\r\n+                      // ChosingColor(\r\n+                      //   color: AppColors.splashBackgroundColor,\r\n+                      // ),\r\n+                      // ChosingColor(\r\n+                      //   color: AppColors.baseBrown,\r\n+                      // ),\r\n+                      // ChosingColor(\r\n+                      //   color: AppColors.branchLabelColor,\r\n+                      // ),\r\n+                    ],\r\n+                  ),\r\n+                ),\r\n+                const SizedBox(height: 42),\r\n+                Padding(\r\n+                  padding: const EdgeInsets.symmetric(horizontal: 30),\r\n+                  child: Row(\r\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                    children: [\r\n+                      Button(\r\n+                        text: 'Buy Now',\r\n+                        onPressed: () {},\r\n+                        width: 203,\r\n                       ),\r\n-                      onTap: () {\r\n-                        setState(\r\n-                          () {\r\n-                            isSelected = selectedSize[i];\r\n-                          },\r\n-                        );\r\n-                      },\r\n-                      color: isSelected == selectedSize[i]\r\n-                          ? AppColors.baseRed\r\n-                          : Colors.white,\r\n-                    )\r\n-                ],\r\n-              ),\r\n-            ),\r\n-            const SizedBox(height: 39),\r\n-            const Padding(\r\n-              padding: EdgeInsets.only(left: 21),\r\n-              child: Text(\r\n-                'Choose color',\r\n-                style: AppTypography.productSize,\r\n-              ),\r\n-            ),\r\n-            const SizedBox(height: 28),\r\n-            Padding(\r\n-              padding: const EdgeInsets.only(left: 29, right: 100),\r\n-              child: Row(\r\n-                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                children: [\r\n-                  for (var i = 0; i < productColors.length; i++)\r\n-                    ChosingColor(\r\n-                        color: productColors[i].color,\r\n-                        widget: selectedColor == productColors[i]\r\n-                            ? const Icon(Icons.check)\r\n-                            : const Icon(\r\n-                                Icons.close_rounded,\r\n-                                color: Colors.white,\r\n-                              ),\r\n-                        onTap: () {\r\n-                          setState(\r\n-                            () {\r\n-                              selectedColor = productColors[i];\r\n-                              widget.productInfo.selectedColor = selectedColor;\r\n-                            },\r\n-                          );\r\n-                        })\r\n-                  // ChosingColor(\r\n-                  //   color: AppColors.baseRed,\r\n-                  // ),\r\n-                  // ChosingColor(\r\n-                  //   color: AppColors.splashBackgroundColor,\r\n-                  // ),\r\n-                  // ChosingColor(\r\n-                  //   color: AppColors.baseBrown,\r\n-                  // ),\r\n-                  // ChosingColor(\r\n-                  //   color: AppColors.branchLabelColor,\r\n-                  // ),\r\n-                ],\r\n-              ),\r\n-            ),\r\n-            const SizedBox(height: 42),\r\n-            Padding(\r\n-              padding: const EdgeInsets.symmetric(horizontal: 30),\r\n-              child: Row(\r\n-                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                children: [\r\n-                  Button(\r\n-                    text: 'Buy Now',\r\n-                    onPressed: () {},\r\n-                    width: 203,\r\n+                      const Image(image: AssetImage(AppPictures.productImage))\r\n+                    ],\r\n                   ),\r\n-                  const Image(image: AssetImage(AppPictures.productImage))\r\n-                ],\r\n-              ),\r\n+                ),\r\n+                const SizedBox(height: 106),\r\n+              ],\r\n             ),\r\n-            const SizedBox(height: 106),\r\n-          ],\r\n-        ),\r\n-      ),\r\n+          ),\r\n+        );\r\n+      },\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1733261639044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n                               onPressed = !onPressed;\r\n                               if (isFavoriteItems\r\n                                   .any((i) => i.id == widget.productInfo.id)) {\r\n                                 // isFavoriteItems.remove(widget.productInfo);\r\n-                                context.read()\r\n+                                context.read<FavoriteCubit>().\r\n                               } else {\r\n                                 widget.productInfo.selectedColor =\r\n                                     selectedColor;\r\n                                 isFavoriteItems.add(widget.productInfo);\r\n"
                },
                {
                    "date": 1733261649607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n                               onPressed = !onPressed;\r\n                               if (isFavoriteItems\r\n                                   .any((i) => i.id == widget.productInfo.id)) {\r\n                                 // isFavoriteItems.remove(widget.productInfo);\r\n-                                context.read<FavoriteCubit>().\r\n+                                context.read<FavoriteCubit>().addToFavorites(favoriteProduct)\r\n                               } else {\r\n                                 widget.productInfo.selectedColor =\r\n                                     selectedColor;\r\n                                 isFavoriteItems.add(widget.productInfo);\r\n"
                }
            ],
            "date": 1733254704366,
            "name": "Commit-0",
            "content": "\r\nimport 'package:cubit_example/constants/back_arrow.dart';\r\nimport 'package:cubit_example/constants/theme/app_colors.dart';\r\nimport 'package:cubit_example/data/product_color.dart';\r\nimport 'package:cubit_example/data/product_info.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nclass ProductPage extends StatefulWidget {\r\n  const ProductPage({\r\n    super.key,\r\n    required this.productInfo,\r\n  });\r\n\r\n  final ProductInfo productInfo;\r\n\r\n  @override\r\n  State<ProductPage> createState() => _ProductPageState();\r\n}\r\n\r\nclass _ProductPageState extends State<ProductPage> {\r\n  String isSelected = 'XS';\r\n  var selectedColor = productColors.first;\r\n  bool onPressed = false;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      backgroundColor: AppColors.veryLightGrey,\r\n      body: SingleChildScrollView(\r\n        child: Column(\r\n          crossAxisAlignment: CrossAxisAlignment.start,\r\n          children: [\r\n            Stack(\r\n              children: [\r\n                SizedBox(\r\n                  height: 435,\r\n                  child: Image.asset(widget.productInfo.imagePath),\r\n                ),\r\n                const Padding(\r\n                  padding: EdgeInsets.only(left: 34, top: 42),\r\n                  child: BackArrow(\r\n                    radius: 21,\r\n                    icon: Icon(\r\n                      color: AppColors.baseRed,\r\n                      Icons.arrow_back,\r\n                      size: 34,\r\n                    ),\r\n                  ),\r\n                ),\r\n                Padding(\r\n                  padding: const EdgeInsets.only(top: 22),\r\n                  child: LikeButton(\r\n                    likeImage: onPressed\r\n                        ? const AssetImage(AppPictures.iconSelectedHeart)\r\n                        : const AssetImage(AppPictures.iconHeart),\r\n                    color: AppColors.roundedHeart,\r\n                    onTap: () {\r\n                      setState(\r\n                        () {\r\n                          onPressed = !onPressed;\r\n                          if (isFavoriteItems\r\n                              .any((i) => i.id == widget.productInfo.id)) {\r\n                            isFavoriteItems.remove(widget.productInfo);\r\n                          } else {\r\n                            widget.productInfo.selectedColor = selectedColor;\r\n                            isFavoriteItems.add(widget.productInfo);\r\n                          }\r\n                        },\r\n                      );\r\n                    },\r\n                  ),\r\n                )\r\n              ],\r\n            ),\r\n            Padding(\r\n              padding: const EdgeInsets.only(\r\n                top: 57,\r\n                left: 27,\r\n                right: 30,\r\n              ),\r\n              child: Row(\r\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                children: [\r\n                  Text(\r\n                    widget.productInfo.name,\r\n                    style: AppTypography.productTitle,\r\n                  ),\r\n                  Text(\r\n                    '${widget.productInfo.price}\\$',\r\n                    style: AppTypography.productTitlePrice,\r\n                  )\r\n                ],\r\n              ),\r\n            ),\r\n            const Padding(\r\n              padding: EdgeInsets.only(left: 29),\r\n              child: Text(\r\n                'Leila dress',\r\n                style: AppTypography.aboutUsText,\r\n              ),\r\n            ),\r\n            const SizedBox(height: 21),\r\n            const Padding(\r\n              padding: EdgeInsets.only(left: 29),\r\n              child: Text(\r\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Tempus, sed sociis at pellentesque adipiscing tristique eu lectus venenatis.',\r\n                style: AppTypography.productInfo,\r\n              ),\r\n            ),\r\n            const SizedBox(height: 39),\r\n            const Padding(\r\n              padding: EdgeInsets.only(left: 21),\r\n              child: Text(\r\n                'Choose size',\r\n                style: AppTypography.productSize,\r\n              ),\r\n            ),\r\n            Padding(\r\n              padding: const EdgeInsets.only(left: 30, top: 30),\r\n              child: Row(\r\n                children: [\r\n                  for (var i = 0; i < selectedSize.length; i++)\r\n                    ChosingButton(\r\n                      text: Text(\r\n                        selectedSize[i],\r\n                        style: isSelected == selectedSize[i]\r\n                            ? AppTypography.productCircleSelected\r\n                            : AppTypography.productCircle,\r\n                      ),\r\n                      onTap: () {\r\n                        setState(\r\n                          () {\r\n                            isSelected = selectedSize[i];\r\n                          },\r\n                        );\r\n                      },\r\n                      color: isSelected == selectedSize[i]\r\n                          ? AppColors.baseRed\r\n                          : Colors.white,\r\n                    )\r\n                ],\r\n              ),\r\n            ),\r\n            const SizedBox(height: 39),\r\n            const Padding(\r\n              padding: EdgeInsets.only(left: 21),\r\n              child: Text(\r\n                'Choose color',\r\n                style: AppTypography.productSize,\r\n              ),\r\n            ),\r\n            const SizedBox(height: 28),\r\n            Padding(\r\n              padding: const EdgeInsets.only(left: 29, right: 100),\r\n              child: Row(\r\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                children: [\r\n                  for (var i = 0; i < productColors.length; i++)\r\n                    ChosingColor(\r\n                        color: productColors[i].color,\r\n                        widget: selectedColor == productColors[i]\r\n                            ? const Icon(Icons.check)\r\n                            : const Icon(\r\n                                Icons.close_rounded,\r\n                                color: Colors.white,\r\n                              ),\r\n                        onTap: () {\r\n                          setState(\r\n                            () {\r\n                              selectedColor = productColors[i];\r\n                              widget.productInfo.selectedColor = selectedColor;\r\n                            },\r\n                          );\r\n                        })\r\n                  // ChosingColor(\r\n                  //   color: AppColors.baseRed,\r\n                  // ),\r\n                  // ChosingColor(\r\n                  //   color: AppColors.splashBackgroundColor,\r\n                  // ),\r\n                  // ChosingColor(\r\n                  //   color: AppColors.baseBrown,\r\n                  // ),\r\n                  // ChosingColor(\r\n                  //   color: AppColors.branchLabelColor,\r\n                  // ),\r\n                ],\r\n              ),\r\n            ),\r\n            const SizedBox(height: 42),\r\n            Padding(\r\n              padding: const EdgeInsets.symmetric(horizontal: 30),\r\n              child: Row(\r\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                children: [\r\n                  Button(\r\n                    text: 'Buy Now',\r\n                    onPressed: () {},\r\n                    width: 203,\r\n                  ),\r\n                  const Image(image: AssetImage(AppPictures.productImage))\r\n                ],\r\n              ),\r\n            ),\r\n            const SizedBox(height: 106),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}