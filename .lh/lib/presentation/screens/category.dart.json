{
    "sourceFile": "lib/presentation/screens/category.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1733254612671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733254643210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,7 @@\n+import 'package:cubit_example/constants/button.dart';\r\n import 'package:cubit_example/constants/theme/app_colors.dart';\r\n+import 'package:cubit_example/constants/theme/app_typography.dart';\r\n import 'package:cubit_example/data/mock_data.dart';\r\n import 'package:cubit_example/data/product_info.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n"
                },
                {
                    "date": 1733255026486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import 'package:cubit_example/constants/theme/app_colors.dart';\r\n import 'package:cubit_example/constants/theme/app_typography.dart';\r\n import 'package:cubit_example/data/mock_data.dart';\r\n import 'package:cubit_example/data/product_info.dart';\r\n+import 'package:cubit_example/presentation/screens/product_page.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n class Category extends StatefulWidget {\r\n   const Category({super.key});\r\n"
                },
                {
                    "date": 1733259229136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,22 +13,22 @@\n   State<Category> createState() => _CategoryState();\r\n }\r\n \r\n class _CategoryState extends State<Category> {\r\n-  var filter = 'All';\r\n+  // var filter = 'All';\r\n \r\n-  List<ProductInfo> selectedCategoryProducts() {\r\n-    if (filter == 'All') {\r\n-      return products;\r\n-    } else if (filter == 'Boys') {\r\n-      return products.where((i) => i.type == 'Boys').toList();\r\n-    } else if (filter == 'Girls') {\r\n-      return products.where((i) => i.type == 'Girls').toList();\r\n-    } else if (filter == 'Kids') {\r\n-      return products.where((i) => i.type == 'Kids').toList();\r\n-    }\r\n-    return products;\r\n-  }\r\n+  // List<ProductInfo> selectedCategoryProducts() {\r\n+  //   if (filter == 'All') {\r\n+  //     return products;\r\n+  //   } else if (filter == 'Boys') {\r\n+  //     return products.where((i) => i.type == 'Boys').toList();\r\n+  //   } else if (filter == 'Girls') {\r\n+  //     return products.where((i) => i.type == 'Girls').toList();\r\n+  //   } else if (filter == 'Kids') {\r\n+  //     return products.where((i) => i.type == 'Kids').toList();\r\n+  //   }\r\n+  //   return products;\r\n+  // }\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return SafeArea(\r\n"
                },
                {
                    "date": 1733259292668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n import 'package:cubit_example/constants/button.dart';\r\n import 'package:cubit_example/constants/theme/app_colors.dart';\r\n import 'package:cubit_example/constants/theme/app_typography.dart';\r\n-import 'package:cubit_example/data/mock_data.dart';\r\n-import 'package:cubit_example/data/product_info.dart';\r\n+import 'package:cubit_example/cubit/type_cubit.dart';\r\n import 'package:cubit_example/presentation/screens/product_page.dart';\r\n import 'package:flutter/material.dart';\r\n+import 'package:flutter_bloc/flutter_bloc.dart';\r\n \r\n class Category extends StatefulWidget {\r\n   const Category({super.key});\r\n \r\n@@ -30,183 +30,188 @@\n   // }\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return SafeArea(\r\n-      child: Scaffold(\r\n-        backgroundColor: AppColors.veryLightGrey,\r\n-        body: Padding(\r\n-          padding: const EdgeInsets.only(\r\n-            left: 30,\r\n-            right: 30,\r\n-            top: 33,\r\n-          ),\r\n-          child: SingleChildScrollView(\r\n-            reverse: true,\r\n-            child: Column(\r\n-              children: [\r\n-                Container(\r\n-                  decoration: const BoxDecoration(\r\n-                    boxShadow: [\r\n-                      BoxShadow(\r\n-                        blurRadius: 3,\r\n-                        color: AppColors.shadowColor,\r\n-                        spreadRadius: 0,\r\n-                      )\r\n-                    ],\r\n-                    color: Colors.white,\r\n-                    borderRadius: BorderRadius.all(\r\n-                      Radius.circular(6.25),\r\n-                    ),\r\n-                  ),\r\n-                  height: 45,\r\n-                  child: Padding(\r\n-                    padding: const EdgeInsets.only(\r\n-                      left: 28,\r\n-                      top: 10.69,\r\n-                      bottom: 10.69,\r\n-                    ),\r\n-                    child: TextFormField(\r\n-                      decoration: const InputDecoration(\r\n-                        border: InputBorder.none,\r\n-                        hintStyle: AppTypography.hintText,\r\n-                        hintText: 'Search ...',\r\n-                        suffixIcon: Icon(\r\n-                          Icons.search,\r\n-                          color: AppColors.iconSelectedtColor,\r\n+    return BlocBuilder<TypeCubit, TypeState>(\r\n+      builder: (context, state) {\r\n+        return SafeArea(\r\n+          child: Scaffold(\r\n+            backgroundColor: AppColors.veryLightGrey,\r\n+            body: Padding(\r\n+              padding: const EdgeInsets.only(\r\n+                left: 30,\r\n+                right: 30,\r\n+                top: 33,\r\n+              ),\r\n+              child: SingleChildScrollView(\r\n+                reverse: true,\r\n+                child: Column(\r\n+                  children: [\r\n+                    Container(\r\n+                      decoration: const BoxDecoration(\r\n+                        boxShadow: [\r\n+                          BoxShadow(\r\n+                            blurRadius: 3,\r\n+                            color: AppColors.shadowColor,\r\n+                            spreadRadius: 0,\r\n+                          )\r\n+                        ],\r\n+                        color: Colors.white,\r\n+                        borderRadius: BorderRadius.all(\r\n+                          Radius.circular(6.25),\r\n                         ),\r\n                       ),\r\n+                      height: 45,\r\n+                      child: Padding(\r\n+                        padding: const EdgeInsets.only(\r\n+                          left: 28,\r\n+                          top: 10.69,\r\n+                          bottom: 10.69,\r\n+                        ),\r\n+                        child: TextFormField(\r\n+                          decoration: const InputDecoration(\r\n+                            border: InputBorder.none,\r\n+                            hintStyle: AppTypography.hintText,\r\n+                            hintText: 'Search ...',\r\n+                            suffixIcon: Icon(\r\n+                              Icons.search,\r\n+                              color: AppColors.iconSelectedtColor,\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n                     ),\r\n-                  ),\r\n-                ),\r\n-                const SizedBox(height: 44),\r\n-                Row(\r\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                  children: [\r\n-                    ElevatedButton(\r\n-                      onPressed: () {\r\n-                        setState(() {\r\n-                          filter = 'All';\r\n-                        });\r\n-                      },\r\n-                      style: ElevatedButton.styleFrom(\r\n-                          backgroundColor: filter == 'All'\r\n-                              ? AppColors.iconSelectedtColor\r\n-                              : Colors.white),\r\n-                      child: Text('All',\r\n-                          style: filter == 'All'\r\n-                              ? AppTypography.isPressedButtonText\r\n-                              : AppTypography.isNotPressedButtonText),\r\n-                    ),\r\n-                    ElevatedButton(\r\n-                      onPressed: () {\r\n-                        setState(() {\r\n-                          filter = 'Boys';\r\n-                        });\r\n-                      },\r\n-                      style: ElevatedButton.styleFrom(\r\n-                          backgroundColor: filter == 'Boys'\r\n-                              ? AppColors.iconSelectedtColor\r\n-                              : Colors.white),\r\n-                      child: Text('Boys',\r\n-                          style: filter == 'Boys'\r\n-                              ? AppTypography.isPressedButtonText\r\n-                              : AppTypography.isNotPressedButtonText),\r\n-                    ),\r\n-                    ElevatedButton(\r\n-                      onPressed: () {\r\n-                        setState(() {\r\n-                          filter = 'Girls';\r\n-                        });\r\n-                      },\r\n-                      style: ElevatedButton.styleFrom(\r\n-                          backgroundColor: filter == 'Girls'\r\n-                              ? AppColors.iconSelectedtColor\r\n-                              : Colors.white),\r\n-                      child: Text('Girls',\r\n-                          style: filter == 'Girls'\r\n-                              ? AppTypography.isPressedButtonText\r\n-                              : AppTypography.isNotPressedButtonText),\r\n-                    ),\r\n-                    // const SizedBox(width: 25),\r\n-                    ElevatedButton(\r\n-                      onPressed: () {\r\n-                        setState(() {\r\n-                          filter = 'Kids';\r\n-                        });\r\n-                      },\r\n-                      style: ElevatedButton.styleFrom(\r\n-                          backgroundColor: filter == 'Kids'\r\n-                              ? AppColors.iconSelectedtColor\r\n-                              : Colors.white),\r\n-                      child: Text('Kids',\r\n-                          style: filter == 'Kids'\r\n-                              ? AppTypography.isPressedButtonText\r\n-                              : AppTypography.isNotPressedButtonText),\r\n-                    ),\r\n-                  ],\r\n-                ),\r\n-                const SizedBox(height: 32),\r\n-                GridView.builder(\r\n-                  shrinkWrap: true,\r\n-                  primary: false,\r\n-                  gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\r\n-                    crossAxisCount: 2,\r\n-                    mainAxisExtent: 300,\r\n-                    childAspectRatio: 1,\r\n-                  ),\r\n-                  itemCount: selectedCategoryProducts().length,\r\n-                  itemBuilder: (context, index) {\r\n-                    return Column(\r\n+                    const SizedBox(height: 44),\r\n+                    Row(\r\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                       children: [\r\n-                        GestureDetector(\r\n-                          onTap: () {\r\n-                            Navigator.push(\r\n-                              context,\r\n-                              MaterialPageRoute(\r\n-                                builder: (context) => ProductPage(\r\n-                                  productInfo:\r\n-                                      selectedCategoryProducts()[index],\r\n-                                ),\r\n-                              ),\r\n-                            );\r\n+                        ElevatedButton(\r\n+                          onPressed: () {\r\n+                            // setState(() {\r\n+                            //   filter = 'All';\r\n+                            // });\r\n                           },\r\n-                          child: Image.asset(\r\n-                              selectedCategoryProducts()[index].imagePath),\r\n+                          style: ElevatedButton.styleFrom(\r\n+                              backgroundColor: state.categoryfilter == 'All'\r\n+                                  ? AppColors.iconSelectedtColor\r\n+                                  : Colors.white),\r\n+                          child: Text('All',\r\n+                              style: filter == 'All'\r\n+                                  ? AppTypography.isPressedButtonText\r\n+                                  : AppTypography.isNotPressedButtonText),\r\n                         ),\r\n-                        const SizedBox(height: 10),\r\n-                        Text(\r\n-                          selectedCategoryProducts()[index].name,\r\n-                          style: AppTypography.categoryItemName,\r\n+                        ElevatedButton(\r\n+                          onPressed: () {\r\n+                            setState(() {\r\n+                              filter = 'Boys';\r\n+                            });\r\n+                          },\r\n+                          style: ElevatedButton.styleFrom(\r\n+                              backgroundColor: filter == 'Boys'\r\n+                                  ? AppColors.iconSelectedtColor\r\n+                                  : Colors.white),\r\n+                          child: Text('Boys',\r\n+                              style: filter == 'Boys'\r\n+                                  ? AppTypography.isPressedButtonText\r\n+                                  : AppTypography.isNotPressedButtonText),\r\n                         ),\r\n-                        Text(\r\n-                          '${selectedCategoryProducts()[index].price}Azn',\r\n-                          style: AppTypography.categoryItemPrice,\r\n+                        ElevatedButton(\r\n+                          onPressed: () {\r\n+                            setState(() {\r\n+                              filter = 'Girls';\r\n+                            });\r\n+                          },\r\n+                          style: ElevatedButton.styleFrom(\r\n+                              backgroundColor: filter == 'Girls'\r\n+                                  ? AppColors.iconSelectedtColor\r\n+                                  : Colors.white),\r\n+                          child: Text('Girls',\r\n+                              style: filter == 'Girls'\r\n+                                  ? AppTypography.isPressedButtonText\r\n+                                  : AppTypography.isNotPressedButtonText),\r\n                         ),\r\n+                        // const SizedBox(width: 25),\r\n+                        ElevatedButton(\r\n+                          onPressed: () {\r\n+                            setState(() {\r\n+                              filter = 'Kids';\r\n+                            });\r\n+                          },\r\n+                          style: ElevatedButton.styleFrom(\r\n+                              backgroundColor: filter == 'Kids'\r\n+                                  ? AppColors.iconSelectedtColor\r\n+                                  : Colors.white),\r\n+                          child: Text('Kids',\r\n+                              style: filter == 'Kids'\r\n+                                  ? AppTypography.isPressedButtonText\r\n+                                  : AppTypography.isNotPressedButtonText),\r\n+                        ),\r\n                       ],\r\n-                    );\r\n-                  },\r\n-                ),\r\n-                const SizedBox(height: 63),\r\n-                Row(\r\n-                  children: [\r\n-                    Button(\r\n-                      text: 'Sort',\r\n-                      onPressed: () {},\r\n-                      width: 153,\r\n                     ),\r\n-                    Button(\r\n-                      text: 'Filter',\r\n-                      onPressed: () {},\r\n-                      width: 153,\r\n-                    )\r\n+                    const SizedBox(height: 32),\r\n+                    GridView.builder(\r\n+                      shrinkWrap: true,\r\n+                      primary: false,\r\n+                      gridDelegate:\r\n+                          const SliverGridDelegateWithFixedCrossAxisCount(\r\n+                        crossAxisCount: 2,\r\n+                        mainAxisExtent: 300,\r\n+                        childAspectRatio: 1,\r\n+                      ),\r\n+                      itemCount: selectedCategoryProducts().length,\r\n+                      itemBuilder: (context, index) {\r\n+                        return Column(\r\n+                          children: [\r\n+                            GestureDetector(\r\n+                              onTap: () {\r\n+                                Navigator.push(\r\n+                                  context,\r\n+                                  MaterialPageRoute(\r\n+                                    builder: (context) => ProductPage(\r\n+                                      productInfo:\r\n+                                          selectedCategoryProducts()[index],\r\n+                                    ),\r\n+                                  ),\r\n+                                );\r\n+                              },\r\n+                              child: Image.asset(\r\n+                                  selectedCategoryProducts()[index].imagePath),\r\n+                            ),\r\n+                            const SizedBox(height: 10),\r\n+                            Text(\r\n+                              selectedCategoryProducts()[index].name,\r\n+                              style: AppTypography.categoryItemName,\r\n+                            ),\r\n+                            Text(\r\n+                              '${selectedCategoryProducts()[index].price}Azn',\r\n+                              style: AppTypography.categoryItemPrice,\r\n+                            ),\r\n+                          ],\r\n+                        );\r\n+                      },\r\n+                    ),\r\n+                    const SizedBox(height: 63),\r\n+                    Row(\r\n+                      children: [\r\n+                        Button(\r\n+                          text: 'Sort',\r\n+                          onPressed: () {},\r\n+                          width: 153,\r\n+                        ),\r\n+                        Button(\r\n+                          text: 'Filter',\r\n+                          onPressed: () {},\r\n+                          width: 153,\r\n+                        )\r\n+                      ],\r\n+                    ),\r\n+                    const SizedBox(height: 94),\r\n                   ],\r\n                 ),\r\n-                const SizedBox(height: 94),\r\n-              ],\r\n+              ),\r\n             ),\r\n           ),\r\n-        ),\r\n-      ),\r\n+        );\r\n+      },\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1733259325402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,8 +88,10 @@\n                           onPressed: () {\r\n                             // setState(() {\r\n                             //   filter = 'All';\r\n                             // });\r\n+                                                          context.read<TypeCubit>().porductListAll();\r\n+\r\n                           },\r\n                           style: ElevatedButton.styleFrom(\r\n                               backgroundColor: state.categoryfilter == 'All'\r\n                                   ? AppColors.iconSelectedtColor\r\n"
                },
                {
                    "date": 1733259399139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,32 +95,34 @@\n                               backgroundColor: state.categoryfilter == 'All'\r\n                                   ? AppColors.iconSelectedtColor\r\n                                   : Colors.white),\r\n                           child: Text('All',\r\n-                              style: filter == 'All'\r\n+                              style: state.categoryfilter == 'All'\r\n                                   ? AppTypography.isPressedButtonText\r\n                                   : AppTypography.isNotPressedButtonText),\r\n                         ),\r\n                         ElevatedButton(\r\n                           onPressed: () {\r\n-                            setState(() {\r\n-                              filter = 'Boys';\r\n-                            });\r\n+                            // setState(() {\r\n+                            //   filter = 'Boys';\r\n+                            // });\r\n+                                                        context.read<TypeCubit>().porductListAll();\r\n+\r\n                           },\r\n                           style: ElevatedButton.styleFrom(\r\n-                              backgroundColor: filter == 'Boys'\r\n+                              backgroundColor: state.categoryfilter == 'Boys'\r\n                                   ? AppColors.iconSelectedtColor\r\n                                   : Colors.white),\r\n                           child: Text('Boys',\r\n-                              style: filter == 'Boys'\r\n+                              style: state.categoryfilter == 'Boys'\r\n                                   ? AppTypography.isPressedButtonText\r\n                                   : AppTypography.isNotPressedButtonText),\r\n                         ),\r\n                         ElevatedButton(\r\n                           onPressed: () {\r\n-                            setState(() {\r\n-                              filter = 'Girls';\r\n-                            });\r\n+                            // setState(() {\r\n+                            //   filter = 'Girls';\r\n+                            // });\r\n                           },\r\n                           style: ElevatedButton.styleFrom(\r\n                               backgroundColor: filter == 'Girls'\r\n                                   ? AppColors.iconSelectedtColor\r\n"
                },
                {
                    "date": 1733259438404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n                           onPressed: () {\r\n                             // setState(() {\r\n                             //   filter = 'Boys';\r\n                             // });\r\n-                            context.read<TypeCubit>().porductListAll();\r\n+                            context.read<TypeCubit>().porductListBoys();\r\n                           },\r\n                           style: ElevatedButton.styleFrom(\r\n                               backgroundColor: state.categoryfilter == 'Boys'\r\n                                   ? AppColors.iconSelectedtColor\r\n@@ -120,24 +120,28 @@\n                           onPressed: () {\r\n                             // setState(() {\r\n                             //   filter = 'Girls';\r\n                             // });\r\n+                                                        context.read<TypeCubit>().porductListGirls();\r\n+\r\n                           },\r\n                           style: ElevatedButton.styleFrom(\r\n-                              backgroundColor: filter == 'Girls'\r\n+                              backgroundColor: state.categoryfilter == 'Girls'\r\n                                   ? AppColors.iconSelectedtColor\r\n                                   : Colors.white),\r\n                           child: Text('Girls',\r\n-                              style: filter == 'Girls'\r\n+                              style: state.categoryfilter == 'Girls'\r\n                                   ? AppTypography.isPressedButtonText\r\n                                   : AppTypography.isNotPressedButtonText),\r\n                         ),\r\n                         // const SizedBox(width: 25),\r\n                         ElevatedButton(\r\n                           onPressed: () {\r\n-                            setState(() {\r\n-                              filter = 'Kids';\r\n-                            });\r\n+                            // setState(() {\r\n+                            //   filter = 'Kids';\r\n+                            // });\r\n+                                                        context.read<TypeCubit>().porductListBoys();\r\n+\r\n                           },\r\n                           style: ElevatedButton.styleFrom(\r\n                               backgroundColor: filter == 'Kids'\r\n                                   ? AppColors.iconSelectedtColor\r\n"
                },
                {
                    "date": 1733259492723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,16 +137,16 @@\n                           onPressed: () {\r\n                             // setState(() {\r\n                             //   filter = 'Kids';\r\n                             // });\r\n-                            context.read<TypeCubit>().porductListBoys();\r\n+                            context.read<TypeCubit>().porductListKids();\r\n                           },\r\n                           style: ElevatedButton.styleFrom(\r\n-                              backgroundColor: filter == 'Kids'\r\n+                              backgroundColor: state.categoryfilter == 'Kids'\r\n                                   ? AppColors.iconSelectedtColor\r\n                                   : Colors.white),\r\n                           child: Text('Kids',\r\n-                              style: filter == 'Kids'\r\n+                              style: state.categoryfilter == 'Kids'\r\n                                   ? AppTypography.isPressedButtonText\r\n                                   : AppTypography.isNotPressedButtonText),\r\n                         ),\r\n                       ],\r\n@@ -160,9 +160,9 @@\n                         crossAxisCount: 2,\r\n                         mainAxisExtent: 300,\r\n                         childAspectRatio: 1,\r\n                       ),\r\n-                      itemCount: selectedCategoryProducts().length,\r\n+                      itemCount: state.products.length,\r\n                       itemBuilder: (context, index) {\r\n                         return Column(\r\n                           children: [\r\n                             GestureDetector(\r\n@@ -171,9 +171,9 @@\n                                   context,\r\n                                   MaterialPageRoute(\r\n                                     builder: (context) => ProductPage(\r\n                                       productInfo:\r\n-                                          selectedCategoryProducts()[index],\r\n+                                          state.products()[index],\r\n                                     ),\r\n                                   ),\r\n                                 );\r\n                               },\r\n"
                }
            ],
            "date": 1733254612671,
            "name": "Commit-0",
            "content": "\r\nimport 'package:cubit_example/constants/theme/app_colors.dart';\r\nimport 'package:cubit_example/data/mock_data.dart';\r\nimport 'package:cubit_example/data/product_info.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nclass Category extends StatefulWidget {\r\n  const Category({super.key});\r\n\r\n  @override\r\n  State<Category> createState() => _CategoryState();\r\n}\r\n\r\nclass _CategoryState extends State<Category> {\r\n  var filter = 'All';\r\n\r\n  List<ProductInfo> selectedCategoryProducts() {\r\n    if (filter == 'All') {\r\n      return products;\r\n    } else if (filter == 'Boys') {\r\n      return products.where((i) => i.type == 'Boys').toList();\r\n    } else if (filter == 'Girls') {\r\n      return products.where((i) => i.type == 'Girls').toList();\r\n    } else if (filter == 'Kids') {\r\n      return products.where((i) => i.type == 'Kids').toList();\r\n    }\r\n    return products;\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return SafeArea(\r\n      child: Scaffold(\r\n        backgroundColor: AppColors.veryLightGrey,\r\n        body: Padding(\r\n          padding: const EdgeInsets.only(\r\n            left: 30,\r\n            right: 30,\r\n            top: 33,\r\n          ),\r\n          child: SingleChildScrollView(\r\n            reverse: true,\r\n            child: Column(\r\n              children: [\r\n                Container(\r\n                  decoration: const BoxDecoration(\r\n                    boxShadow: [\r\n                      BoxShadow(\r\n                        blurRadius: 3,\r\n                        color: AppColors.shadowColor,\r\n                        spreadRadius: 0,\r\n                      )\r\n                    ],\r\n                    color: Colors.white,\r\n                    borderRadius: BorderRadius.all(\r\n                      Radius.circular(6.25),\r\n                    ),\r\n                  ),\r\n                  height: 45,\r\n                  child: Padding(\r\n                    padding: const EdgeInsets.only(\r\n                      left: 28,\r\n                      top: 10.69,\r\n                      bottom: 10.69,\r\n                    ),\r\n                    child: TextFormField(\r\n                      decoration: const InputDecoration(\r\n                        border: InputBorder.none,\r\n                        hintStyle: AppTypography.hintText,\r\n                        hintText: 'Search ...',\r\n                        suffixIcon: Icon(\r\n                          Icons.search,\r\n                          color: AppColors.iconSelectedtColor,\r\n                        ),\r\n                      ),\r\n                    ),\r\n                  ),\r\n                ),\r\n                const SizedBox(height: 44),\r\n                Row(\r\n                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                  children: [\r\n                    ElevatedButton(\r\n                      onPressed: () {\r\n                        setState(() {\r\n                          filter = 'All';\r\n                        });\r\n                      },\r\n                      style: ElevatedButton.styleFrom(\r\n                          backgroundColor: filter == 'All'\r\n                              ? AppColors.iconSelectedtColor\r\n                              : Colors.white),\r\n                      child: Text('All',\r\n                          style: filter == 'All'\r\n                              ? AppTypography.isPressedButtonText\r\n                              : AppTypography.isNotPressedButtonText),\r\n                    ),\r\n                    ElevatedButton(\r\n                      onPressed: () {\r\n                        setState(() {\r\n                          filter = 'Boys';\r\n                        });\r\n                      },\r\n                      style: ElevatedButton.styleFrom(\r\n                          backgroundColor: filter == 'Boys'\r\n                              ? AppColors.iconSelectedtColor\r\n                              : Colors.white),\r\n                      child: Text('Boys',\r\n                          style: filter == 'Boys'\r\n                              ? AppTypography.isPressedButtonText\r\n                              : AppTypography.isNotPressedButtonText),\r\n                    ),\r\n                    ElevatedButton(\r\n                      onPressed: () {\r\n                        setState(() {\r\n                          filter = 'Girls';\r\n                        });\r\n                      },\r\n                      style: ElevatedButton.styleFrom(\r\n                          backgroundColor: filter == 'Girls'\r\n                              ? AppColors.iconSelectedtColor\r\n                              : Colors.white),\r\n                      child: Text('Girls',\r\n                          style: filter == 'Girls'\r\n                              ? AppTypography.isPressedButtonText\r\n                              : AppTypography.isNotPressedButtonText),\r\n                    ),\r\n                    // const SizedBox(width: 25),\r\n                    ElevatedButton(\r\n                      onPressed: () {\r\n                        setState(() {\r\n                          filter = 'Kids';\r\n                        });\r\n                      },\r\n                      style: ElevatedButton.styleFrom(\r\n                          backgroundColor: filter == 'Kids'\r\n                              ? AppColors.iconSelectedtColor\r\n                              : Colors.white),\r\n                      child: Text('Kids',\r\n                          style: filter == 'Kids'\r\n                              ? AppTypography.isPressedButtonText\r\n                              : AppTypography.isNotPressedButtonText),\r\n                    ),\r\n                  ],\r\n                ),\r\n                const SizedBox(height: 32),\r\n                GridView.builder(\r\n                  shrinkWrap: true,\r\n                  primary: false,\r\n                  gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\r\n                    crossAxisCount: 2,\r\n                    mainAxisExtent: 300,\r\n                    childAspectRatio: 1,\r\n                  ),\r\n                  itemCount: selectedCategoryProducts().length,\r\n                  itemBuilder: (context, index) {\r\n                    return Column(\r\n                      children: [\r\n                        GestureDetector(\r\n                          onTap: () {\r\n                            Navigator.push(\r\n                              context,\r\n                              MaterialPageRoute(\r\n                                builder: (context) => ProductPage(\r\n                                  productInfo:\r\n                                      selectedCategoryProducts()[index],\r\n                                ),\r\n                              ),\r\n                            );\r\n                          },\r\n                          child: Image.asset(\r\n                              selectedCategoryProducts()[index].imagePath),\r\n                        ),\r\n                        const SizedBox(height: 10),\r\n                        Text(\r\n                          selectedCategoryProducts()[index].name,\r\n                          style: AppTypography.categoryItemName,\r\n                        ),\r\n                        Text(\r\n                          '${selectedCategoryProducts()[index].price}Azn',\r\n                          style: AppTypography.categoryItemPrice,\r\n                        ),\r\n                      ],\r\n                    );\r\n                  },\r\n                ),\r\n                const SizedBox(height: 63),\r\n                Row(\r\n                  children: [\r\n                    Button(\r\n                      text: 'Sort',\r\n                      onPressed: () {},\r\n                      width: 153,\r\n                    ),\r\n                    Button(\r\n                      text: 'Filter',\r\n                      onPressed: () {},\r\n                      width: 153,\r\n                    )\r\n                  ],\r\n                ),\r\n                const SizedBox(height: 94),\r\n              ],\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}