{
    "sourceFile": "lib/presentation/screens/home_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1733167230914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733167343557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,86 +112,86 @@\n                     ),\r\n                   ],\r\n                 ),\r\n               ),\r\n-              SizedBox(\r\n-                height: 220,\r\n-                child: ListView.builder(\r\n-                  scrollDirection: Axis.horizontal,\r\n-                  itemCount: products.where((i) => i.isPopular).toList().length,\r\n-                  itemBuilder: (context, index) {\r\n-                    return ContainerDresses(\r\n-                        width: 137,\r\n-                        height: 166,\r\n-                        image: products\r\n-                            .where((i) => i.isPopular)\r\n-                            .toList()[index]\r\n-                            .imagePath);\r\n-                  },\r\n-                ),\r\n-              ),\r\n+              // SizedBox(\r\n+              //   height: 220,\r\n+              //   child: ListView.builder(\r\n+              //     scrollDirection: Axis.horizontal,\r\n+              //     itemCount: products.where((i) => i.isPopular).toList().length,\r\n+              //     itemBuilder: (context, index) {\r\n+              //       return ContainerDresses(\r\n+              //           width: 137,\r\n+              //           height: 166,\r\n+              //           image: products\r\n+              //               .where((i) => i.isPopular)\r\n+              //               .toList()[index]\r\n+              //               .imagePath);\r\n+              //     },\r\n+              //   ),\r\n+              // ),\r\n               const SizedBox(height: 60),\r\n-              Padding(\r\n-                padding: const EdgeInsets.only(left: 30),\r\n-                child: SingleChildScrollView(\r\n-                  scrollDirection: Axis.horizontal,\r\n-                  child: Row(\r\n-                    children: [\r\n-                      ElevatedButton(\r\n-                        onPressed: () {\r\n-                          setState(\r\n-                            () {\r\n-                              homeFilter = 'All';\r\n-                            },\r\n-                          );\r\n-                        },\r\n-                        style: ElevatedButton.styleFrom(\r\n-                            backgroundColor: homeFilter == 'All'\r\n-                                ? AppColors.iconSelectedtColor\r\n-                                : Colors.white),\r\n-                        child: Text('All',\r\n-                            style: homeFilter == 'All'\r\n-                                ? AppTypography.isPressedButtonText\r\n-                                : AppTypography.isNotPressedButtonText),\r\n-                      ),\r\n-                      const SizedBox(width: 25),\r\n-                      ElevatedButton(\r\n-                        onPressed: () {\r\n-                          setState(() {\r\n-                            homeFilter = 'Tranding';\r\n-                          });\r\n-                        },\r\n-                        style: ElevatedButton.styleFrom(\r\n-                            backgroundColor: homeFilter == 'Tranding'\r\n-                                ? AppColors.iconSelectedtColor\r\n-                                : Colors.white),\r\n-                        child: Text('Tranding',\r\n-                            style: homeFilter == 'Tranding'\r\n-                                ? AppTypography.isPressedButtonText\r\n-                                : AppTypography.isNotPressedButtonText),\r\n-                      ),\r\n-                      const SizedBox(width: 25),\r\n-                      ElevatedButton(\r\n-                        onPressed: () {\r\n-                          setState(() {\r\n-                            homeFilter = 'New';\r\n-                          });\r\n-                        },\r\n-                        style: ElevatedButton.styleFrom(\r\n-                            backgroundColor: homeFilter == 'New'\r\n-                                ? AppColors.iconSelectedtColor\r\n-                                : Colors.white),\r\n-                        child: Text(\r\n-                          'New',\r\n-                          style: homeFilter == 'New'\r\n-                              ? AppTypography.isPressedButtonText\r\n-                              : AppTypography.isNotPressedButtonText,\r\n-                        ),\r\n-                      ),\r\n-                    ],\r\n-                  ),\r\n-                ),\r\n-              ),\r\n+              // Padding(\r\n+              //   padding: const EdgeInsets.only(left: 30),\r\n+              //   child: SingleChildScrollView(\r\n+              //     scrollDirection: Axis.horizontal,\r\n+              //     child: Row(\r\n+              //       children: [\r\n+              //         ElevatedButton(\r\n+              //           onPressed: () {\r\n+              //             setState(\r\n+              //               () {\r\n+              //                 homeFilter = 'All';\r\n+              //               },\r\n+              //             );\r\n+              //           },\r\n+              //           style: ElevatedButton.styleFrom(\r\n+              //               backgroundColor: homeFilter == 'All'\r\n+              //                   ? AppColors.iconSelectedtColor\r\n+              //                   : Colors.white),\r\n+              //           child: Text('All',\r\n+              //               style: homeFilter == 'All'\r\n+              //                   ? AppTypography.isPressedButtonText\r\n+              //                   : AppTypography.isNotPressedButtonText),\r\n+              //         ),\r\n+              //         const SizedBox(width: 25),\r\n+              //         ElevatedButton(\r\n+              //           onPressed: () {\r\n+              //             setState(() {\r\n+              //               homeFilter = 'Tranding';\r\n+              //             });\r\n+              //           },\r\n+              //           style: ElevatedButton.styleFrom(\r\n+              //               backgroundColor: homeFilter == 'Tranding'\r\n+              //                   ? AppColors.iconSelectedtColor\r\n+              //                   : Colors.white),\r\n+              //           child: Text('Tranding',\r\n+              //               style: homeFilter == 'Tranding'\r\n+              //                   ? AppTypography.isPressedButtonText\r\n+              //                   : AppTypography.isNotPressedButtonText),\r\n+              //         ),\r\n+              //         const SizedBox(width: 25),\r\n+              //         ElevatedButton(\r\n+              //           onPressed: () {\r\n+              //             setState(() {\r\n+              //               homeFilter = 'New';\r\n+              //             });\r\n+              //           },\r\n+              //           style: ElevatedButton.styleFrom(\r\n+              //               backgroundColor: homeFilter == 'New'\r\n+              //                   ? AppColors.iconSelectedtColor\r\n+              //                   : Colors.white),\r\n+              //           child: Text(\r\n+              //             'New',\r\n+              //             style: homeFilter == 'New'\r\n+              //                 ? AppTypography.isPressedButtonText\r\n+              //                 : AppTypography.isNotPressedButtonText,\r\n+              //           ),\r\n+              //         ),\r\n+              //       ],\r\n+              //     ),\r\n+              //   ),\r\n+              // ),\r\n               const SizedBox(height: 54),\r\n               GridView.builder(\r\n                 primary: false,\r\n                 shrinkWrap: true,\r\n"
                },
                {
                    "date": 1733167370895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,19 +191,24 @@\n               //     ),\r\n               //   ),\r\n               // ),\r\n               const SizedBox(height: 54),\r\n-              GridView.builder(\r\n-                primary: false,\r\n-                shrinkWrap: true,\r\n-                gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\r\n-                    crossAxisCount: 2),\r\n-                itemCount: selectedHomeProducts().length,\r\n-                itemBuilder: (context, index) {\r\n-                  return ContainerDresses(\r\n-                    image: selectedHomeProducts()[index].imagePath,\r\n-                    height: 200,\r\n-                    width: 150,\r\n+              BlocBuilder<SubjectBloc, SubjectState>(\r\n+                builder: (context, state) {\r\n+                  return GridView.builder(\r\n+                    primary: false,\r\n+                    shrinkWrap: true,\r\n+                    gridDelegate:\r\n+                        const SliverGridDelegateWithFixedCrossAxisCount(\r\n+                            crossAxisCount: 2),\r\n+                    itemCount: selectedHomeProducts().length,\r\n+                    itemBuilder: (context, index) {\r\n+                      return ContainerDresses(\r\n+                        image: selectedHomeProducts()[index].imagePath,\r\n+                        height: 200,\r\n+                        width: 150,\r\n+                      );\r\n+                    },\r\n                   );\r\n                 },\r\n               )\r\n             ],\r\n"
                },
                {
                    "date": 1733167396277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,11 @@\n import 'package:cubit_example/constants/theme/app_colors.dart';\r\n import 'package:cubit_example/constants/theme/app_typography.dart';\r\n+import 'package:cubit_example/cubit/counter_cubit.dart';\r\n import 'package:cubit_example/data/product_info.dart';\r\n \r\n import 'package:flutter/material.dart';\r\n+import 'package:flutter_bloc/flutter_bloc.dart';\r\n \r\n class HomePage extends StatefulWidget {\r\n   const HomePage({super.key});\r\n \r\n@@ -191,9 +193,9 @@\n               //     ),\r\n               //   ),\r\n               // ),\r\n               const SizedBox(height: 54),\r\n-              BlocBuilder<SubjectBloc, SubjectState>(\r\n+              BlocBuilder<CounterCubit, SubjectState>(\r\n                 builder: (context, state) {\r\n                   return GridView.builder(\r\n                     primary: false,\r\n                     shrinkWrap: true,\r\n"
                },
                {
                    "date": 1733167499179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,9 +193,9 @@\n               //     ),\r\n               //   ),\r\n               // ),\r\n               const SizedBox(height: 54),\r\n-              BlocBuilder<CounterCubit, SubjectState>(\r\n+              BlocBuilder<CounterCubit, List<ProductInfo>>(\r\n                 builder: (context, state) {\r\n                   return GridView.builder(\r\n                     primary: false,\r\n                     shrinkWrap: true,\r\n"
                },
                {
                    "date": 1733167524819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,9 @@\n               //   ),\r\n               // ),\r\n               const SizedBox(height: 54),\r\n               BlocBuilder<CounterCubit, List<ProductInfo>>(\r\n-                builder: (context, state) {\r\n+                builder: (context, products) {\r\n                   return GridView.builder(\r\n                     primary: false,\r\n                     shrinkWrap: true,\r\n                     gridDelegate:\r\n"
                },
                {
                    "date": 1733167536786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,9 +201,9 @@\n                     shrinkWrap: true,\r\n                     gridDelegate:\r\n                         const SliverGridDelegateWithFixedCrossAxisCount(\r\n                             crossAxisCount: 2),\r\n-                    itemCount: selectedHomeProducts().length,\r\n+                    itemCount: products.length,\r\n                     itemBuilder: (context, index) {\r\n                       return ContainerDresses(\r\n                         image: selectedHomeProducts()[index].imagePath,\r\n                         height: 200,\r\n"
                },
                {
                    "date": 1733167568929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -204,9 +204,9 @@\n                             crossAxisCount: 2),\r\n                     itemCount: products.length,\r\n                     itemBuilder: (context, index) {\r\n                       return ContainerDresses(\r\n-                        image: selectedHomeProducts()[index].imagePath,\r\n+                        image: products[index].imagePath,\r\n                         height: 200,\r\n                         width: 150,\r\n                       );\r\n                     },\r\n"
                },
                {
                    "date": 1733167629872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import 'package:cubit_example/constants/container_dresses.dart';\r\n import 'package:cubit_example/constants/theme/app_colors.dart';\r\n import 'package:cubit_example/constants/theme/app_typography.dart';\r\n import 'package:cubit_example/cubit/counter_cubit.dart';\r\n import 'package:cubit_example/data/product_info.dart';\r\n"
                },
                {
                    "date": 1733167721482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,8 @@\n               //               .imagePath);\r\n               //     },\r\n               //   ),\r\n               // ),\r\n-              const SizedBox(height: 60),\r\n               // Padding(\r\n               //   padding: const EdgeInsets.only(left: 30),\r\n               //   child: SingleChildScrollView(\r\n               //     scrollDirection: Axis.horizontal,\r\n"
                },
                {
                    "date": 1733167839075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,9 +200,9 @@\n                     primary: false,\r\n                     shrinkWrap: true,\r\n                     gridDelegate:\r\n                         const SliverGridDelegateWithFixedCrossAxisCount(\r\n-                            crossAxisCount: 2),\r\n+                            crossAxisCount: 2,),\r\n                     itemCount: products.length,\r\n                     itemBuilder: (context, index) {\r\n                       return ContainerDresses(\r\n                         image: products[index].imagePath,\r\n"
                },
                {
                    "date": 1733169790863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,9 +193,9 @@\n               //     ),\r\n               //   ),\r\n               // ),\r\n               const SizedBox(height: 54),\r\n-              BlocBuilder<CounterCubit, List<ProductInfo>>(\r\n+              BlocBuilder<CounterCubit, CounterState>(\r\n                 builder: (context, products) {\r\n                   return GridView.builder(\r\n                     primary: false,\r\n                     shrinkWrap: true,\r\n"
                },
                {
                    "date": 1733169946622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,20 +194,20 @@\n               //   ),\r\n               // ),\r\n               const SizedBox(height: 54),\r\n               BlocBuilder<CounterCubit, CounterState>(\r\n-                builder: (context, products) {\r\n+                builder: (context, state) {\r\n                   return GridView.builder(\r\n                     primary: false,\r\n                     shrinkWrap: true,\r\n                     gridDelegate:\r\n                         const SliverGridDelegateWithFixedCrossAxisCount(\r\n                       crossAxisCount: 2,\r\n                     ),\r\n-                    itemCount: products.length,\r\n+                    itemCount: state.products.length,\r\n                     itemBuilder: (context, index) {\r\n                       return ContainerDresses(\r\n-                        image: products[index].imagePath,\r\n+                        image: state.products[index].imagePath,\r\n                         height: 200,\r\n                         width: 150,\r\n                       );\r\n                     },\r\n"
                },
                {
                    "date": 1733169983485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import 'package:cubit_example/constants/container_dresses.dart';\r\n import 'package:cubit_example/constants/theme/app_colors.dart';\r\n import 'package:cubit_example/constants/theme/app_typography.dart';\r\n import 'package:cubit_example/cubit/counter_cubit.dart';\r\n-import 'package:cubit_example/data/product_info.dart';\r\n \r\n import 'package:flutter/material.dart';\r\n import 'package:flutter_bloc/flutter_bloc.dart';\r\n \r\n"
                }
            ],
            "date": 1733167230914,
            "name": "Commit-0",
            "content": "import 'package:cubit_example/constants/theme/app_colors.dart';\r\nimport 'package:cubit_example/constants/theme/app_typography.dart';\r\nimport 'package:cubit_example/data/product_info.dart';\r\n\r\nimport 'package:flutter/material.dart';\r\n\r\nclass HomePage extends StatefulWidget {\r\n  const HomePage({super.key});\r\n\r\n  @override\r\n  State<HomePage> createState() => _HomePageState();\r\n}\r\n\r\n// String homeFilter = 'All';\r\n\r\nclass _HomePageState extends State<HomePage> {\r\n//   List<ProductInfo> selectedHomeProducts() {\r\n//     if (homeFilter == 'All') {\r\n//       return products;\r\n//     } else if (homeFilter == 'Tranding') {\r\n//       return products.where((i) => i.isTranding).toList();\r\n//     } else if (homeFilter == 'New') {\r\n//       return products.where((i) => i.isNew).toList();\r\n//     }\r\n//     return products;\r\n//   }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      backgroundColor: AppColors.veryLightGrey,\r\n      body: SafeArea(\r\n        child: SingleChildScrollView(\r\n          reverse: true,\r\n          child: Column(\r\n            children: [\r\n              const Padding(\r\n                padding: EdgeInsets.only(\r\n                  top: 35,\r\n                  right: 30,\r\n                  left: 30,\r\n                  bottom: 28,\r\n                ),\r\n                child: Row(\r\n                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                  children: [\r\n                    // ButtonDrawer(),\r\n                    // LocationButton(),\r\n                  ],\r\n                ),\r\n              ),\r\n              Padding(\r\n                padding: const EdgeInsets.symmetric(horizontal: 30),\r\n                child: Container(\r\n                  decoration: const BoxDecoration(\r\n                    boxShadow: [\r\n                      BoxShadow(\r\n                        blurRadius: 3,\r\n                        color: AppColors.shadowColor,\r\n                        spreadRadius: 0,\r\n                      )\r\n                    ],\r\n                    color: Colors.white,\r\n                    borderRadius: BorderRadius.all(\r\n                      Radius.circular(6.25),\r\n                    ),\r\n                  ),\r\n                  height: 45,\r\n                  child: Padding(\r\n                    padding: const EdgeInsets.only(\r\n                      left: 28,\r\n                      top: 10.69,\r\n                      bottom: 10.69,\r\n                    ),\r\n                    child: TextFormField(\r\n                      decoration: const InputDecoration(\r\n                        border: InputBorder.none,\r\n                        hintStyle: AppTypography.hintText,\r\n                        hintText: 'Search ...',\r\n                        suffixIcon: Icon(\r\n                          Icons.search,\r\n                          color: AppColors.iconSelectedtColor,\r\n                        ),\r\n                      ),\r\n                    ),\r\n                  ),\r\n                ),\r\n              ),\r\n              Padding(\r\n                padding: const EdgeInsets.only(\r\n                    left: 28, top: 47, right: 28, bottom: 27),\r\n                child: Row(\r\n                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                  children: [\r\n                    const Text(\r\n                      'Popular',\r\n                      style: AppTypography.popularText,\r\n                    ),\r\n                    ElevatedButton(\r\n                      onPressed: () {},\r\n                      style: ElevatedButton.styleFrom(\r\n                          backgroundColor: Colors.white),\r\n                      child: const Text(\r\n                        'view all',\r\n                        style: TextStyle(\r\n                          fontSize: 15,\r\n                          fontWeight: FontWeight.w400,\r\n                          fontFamily: 'CormorantGaramond',\r\n                          color: AppColors.iconSelectedtColor,\r\n                        ),\r\n                      ),\r\n                    ),\r\n                  ],\r\n                ),\r\n              ),\r\n              SizedBox(\r\n                height: 220,\r\n                child: ListView.builder(\r\n                  scrollDirection: Axis.horizontal,\r\n                  itemCount: products.where((i) => i.isPopular).toList().length,\r\n                  itemBuilder: (context, index) {\r\n                    return ContainerDresses(\r\n                        width: 137,\r\n                        height: 166,\r\n                        image: products\r\n                            .where((i) => i.isPopular)\r\n                            .toList()[index]\r\n                            .imagePath);\r\n                  },\r\n                ),\r\n              ),\r\n              const SizedBox(height: 60),\r\n              Padding(\r\n                padding: const EdgeInsets.only(left: 30),\r\n                child: SingleChildScrollView(\r\n                  scrollDirection: Axis.horizontal,\r\n                  child: Row(\r\n                    children: [\r\n                      ElevatedButton(\r\n                        onPressed: () {\r\n                          setState(\r\n                            () {\r\n                              homeFilter = 'All';\r\n                            },\r\n                          );\r\n                        },\r\n                        style: ElevatedButton.styleFrom(\r\n                            backgroundColor: homeFilter == 'All'\r\n                                ? AppColors.iconSelectedtColor\r\n                                : Colors.white),\r\n                        child: Text('All',\r\n                            style: homeFilter == 'All'\r\n                                ? AppTypography.isPressedButtonText\r\n                                : AppTypography.isNotPressedButtonText),\r\n                      ),\r\n                      const SizedBox(width: 25),\r\n                      ElevatedButton(\r\n                        onPressed: () {\r\n                          setState(() {\r\n                            homeFilter = 'Tranding';\r\n                          });\r\n                        },\r\n                        style: ElevatedButton.styleFrom(\r\n                            backgroundColor: homeFilter == 'Tranding'\r\n                                ? AppColors.iconSelectedtColor\r\n                                : Colors.white),\r\n                        child: Text('Tranding',\r\n                            style: homeFilter == 'Tranding'\r\n                                ? AppTypography.isPressedButtonText\r\n                                : AppTypography.isNotPressedButtonText),\r\n                      ),\r\n                      const SizedBox(width: 25),\r\n                      ElevatedButton(\r\n                        onPressed: () {\r\n                          setState(() {\r\n                            homeFilter = 'New';\r\n                          });\r\n                        },\r\n                        style: ElevatedButton.styleFrom(\r\n                            backgroundColor: homeFilter == 'New'\r\n                                ? AppColors.iconSelectedtColor\r\n                                : Colors.white),\r\n                        child: Text(\r\n                          'New',\r\n                          style: homeFilter == 'New'\r\n                              ? AppTypography.isPressedButtonText\r\n                              : AppTypography.isNotPressedButtonText,\r\n                        ),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                ),\r\n              ),\r\n              const SizedBox(height: 54),\r\n              GridView.builder(\r\n                primary: false,\r\n                shrinkWrap: true,\r\n                gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\r\n                    crossAxisCount: 2),\r\n                itemCount: selectedHomeProducts().length,\r\n                itemBuilder: (context, index) {\r\n                  return ContainerDresses(\r\n                    image: selectedHomeProducts()[index].imagePath,\r\n                    height: 200,\r\n                    width: 150,\r\n                  );\r\n                },\r\n              )\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}